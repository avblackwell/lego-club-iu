:root {
  --font-primary: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  --font-accent: "DynaPuff", -apple-system, BlinkMacSystemFont, "Segoe UI",
    Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;

  --gradient:
    linear-gradient(0deg, hsla(0 100% 50% / 80%), hsla(0 100% 50% / 0) 75%),
    linear-gradient(60deg, hsla(60 100% 50% / 80%), hsla(60 100% 50% / 0) 75%),
    linear-gradient(120deg, hsla(120 100% 50% / 80%), hsla(120 100% 50% / 0) 75%),
    linear-gradient(180deg, hsla(180 100% 50% / 80%), hsla(180 100% 50% / 0) 75%),
    linear-gradient(240deg, hsla(240 100% 50% / 80%), hsla(240 100% 50% / 0) 75%),
    linear-gradient(300deg, hsla(300 100% 50% / 80%), hsla(300 100% 50% / 0) 75%);

  --gradient-20: conic-gradient(from -135deg at -10% center, #ffa500, #ff7715, #ff522a, #ff3f47, #ff5482, #ff69b4);

  --radius-blob-5: 49% 51% 48% 52% / 57% 44% 56% 43%;
  --shadow-color: 220 3% 15%;
  --shadow-strength: 1%;
  --shadow-3:
    0 -1px 3px 0 hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 1px 2px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 2px 5px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),
    0 4px 12px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),
    0 12px 15px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 7%));



  --white: #f8fafb;
  --crimson: #990000;
  --black: #182534;

  --pink-0: #fff0f6;
  --pink-1: #ffdeeb;
  --pink-2: #fcc2d7;
  --pink-3: #faa2c1;
  --pink-4: #f783ac;
  --pink-5: #f06595;
  --pink-6: #e64980;
  --pink-7: #d6336c;
  --pink-8: #c2255c;
  --pink-9: #a61e4d;
  --pink-10: #8c1941;
  --pink-11: #731536;
  --pink-12: #59102a;

  --cyan-0: #e3fafc;
  --cyan-1: #c5f6fa;
  --cyan-2: #99e9f2;
  --cyan-3: #66d9e8;
  --cyan-4: #3bc9db;
  --cyan-5: #22b8cf;
  --cyan-6: #15aabf;
  --cyan-7: #1098ad;
  --cyan-8: #0c8599;
  --cyan-9: #0b7285;
  --cyan-10: #095c6b;
  --cyan-11: #074652;
  --cyan-12: #053038;

  --red-0: #fff5f5;
  --red-1: #ffe3e3;
  --red-2: #ffc9c9;
  --red-3: #ffa8a8;
  --red-4: #ff8787;
  --red-5: #ff6b6b;
  --red-6: #fa5252;
  --red-7: #f03e3e;
  --red-8: #e03131;
  --red-9: #c92a2a;
  --red-10: #b02525;
  --red-11: #962020;
  --red-12: #7d1a1a;


  --stone-0: #f8fafb;
  --stone-1: #f2f4f6;
  --stone-2: #ebedef;
  --stone-3: #e0e4e5;
  --stone-4: #d1d6d8;
  --stone-5: #b1b6b9;
  --stone-6: #979b9d;
  --stone-7: #7e8282;
  --stone-8: #666968;
  --stone-9: #50514f;
  --stone-10: #3a3a37;
  --stone-11: #252521;
  --stone-12: #121210;

  --gutter: var(--space-s-m);
  --tracking: -0.05ch;
  --tracking-s: -0.075ch;
  --border-radius: var(--size-step-1);


  --space-xs: clamp(0.75rem, 0.69rem + 0.29vw, 0.9375rem);
  --space-s: clamp(1rem, 0.92rem + 0.39vw, 1.25rem);
  --space-m: clamp(1.5rem, 1.38rem + 0.58vw, 1.875rem);
  --space-l: clamp(2rem, 1.84rem + 0.78vw, 2.5rem);
  --space-xl: clamp(3rem, 2.77rem + 1.17vw, 3.75rem);
  --space-2xl: clamp(4rem, 3.69rem + 1.55vw, 5rem);
  --space-3xl: clamp(6rem, 5.53rem + 2.33vw, 7.5rem);
  --space-xs-s: clamp(0.75rem, 0.59rem + 0.78vw, 1.25rem);
  --space-s-m: clamp(1rem, 0.73rem + 1.36vw, 1.875rem);
  --space-m-l: clamp(1.5rem, 1.19rem + 1.55vw, 2.5rem);
  --space-l-xl: clamp(2rem, 1.46rem + 2.72vw, 3.75rem);
  --space-l-2xl: clamp(2rem, 1.07rem + 4.66vw, 5rem);
  --space-xl-2xl: clamp(3rem, 2.38rem + 3.11vw, 5rem);
  --space-2xl-3xl: clamp(4rem, 2.91rem + 5.44vw, 7.5rem);
  --size-step-0: clamp(1rem, 0.92rem + 0.39vw, 1.25rem);
  --size-step-1: clamp(1.1875rem, 1.01rem + 0.87vw, 1.75rem);
  --size-step-2: clamp(1.4375rem, 1.11rem + 1.65vw, 2.5rem);
  --size-step-3: clamp(1.75rem, 1.19rem + 2.82vw, 3.5625rem);
  --size-step-4: clamp(2.0625rem, 1.15rem + 4.56vw, 5rem);
  --size-step-5: clamp(2.5rem, 1.08rem + 7.09vw, 7.0625rem);
  --size-step-6: clamp(3rem, 0.84rem + 10.78vw, 9.9375rem);
}

/* Modern reset: https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Prevent zooming when orientation changes on some iOS devices */
html {
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;

}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}


/* 
  Global styles 

  Low-specificity, global styles that apply to the whole 
  project: https://cube.fyi/css.html
*/
body {
  color: var(--pink-10);
  background: var(--pink-1);
  font-size: var(--size-step-1);
  font-family: var(--font-primary);
  line-height: 1.4;
  letter-spacing: var(--tracking);
}

/* Base typesetting */
h1,
h2,
h3 {
  line-height: 1;
  letter-spacing: var(--tracking-s);
  font-family: var(--font-accent);
}

h1 {
  font-size: var(--size-step-5);
}

h2 {
  font-size: var(--size-step-4);
}

h3 {
  font-size: var(--size-step-3);
}

/* Set line lengths */
p,
li,
blockquote:not([class]) {
  max-width: 50ch;
}

h1,
h2,
h3 {
  max-width: 20ch;
}

/* More generic elements */
blockquote:not([class]) {
  font-family: var(--font-accent);
  font-size: var(--size-step-2);
}

/* Markdown blockquuote:not([class])s aren't ideal, so we're presuming the person quoted is the last p */
blockquote:not([class]) p:last-of-type {
  font-family: var(--font-primary);
  font-size: var(--size-step-1);
  font-weight: normal;
}

svg {
  height: 2ex;
  width: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
}

a:hover {
  text-decoration: none;
}

:focus {
  outline: 2px solid;
  outline-offset: 0.3ch;
}

:target {
  scroll-margin-top: 2ex;
}

main:focus {
  outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background: var(--pink-10);
  color: var(--pink-1);
}

.dark-bg {
  background: var(--pink-10);
  color: var(--pink-1);
}

.dark-bg ::selection {
  background: var(--pink-1);
  color: var(--pink-10);
}

/* 
FLOW UTILITY
Like the Every Layout stack: https://every-layout.dev/layouts/stack/
Info about this implementation: https://piccalil.li/quick-tip/flow-utility/ 
*/
.flow>*+* {
  margin-top: var(--flow-space, 1em);
}

/**
 * REGION 
 * Add consistent vertical padding to create regions of content 
 * Can either be configured by setting --region-space or use a default from the space scale
 */
.region {
  padding-top: var(--region-space, var(--space-l-2xl));
  padding-bottom: var(--region-space, var(--space-l-2xl));
}

/**
 * WRAPPER
 * Sets a max width, adds a consistent gutter and horizontally
 * centers the contents
 * Info: https://piccalil.li/quick-tip/use-css-clamp-to-create-a-more-flexible-wrapper-utility/
 */
.wrapper {
  max-width: var(--wrapper-max-width, 85rem);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--gutter);
  padding-right: var(--gutter);
  position: relative;
}

.person-card {
  display: grid;
  gap: 1.5em;
  grid-template-columns: auto 1fr;
  margin: 1.5em;
  /* fallback */
  margin: 1.5rem min(1.5rem, 3vw);
}

.person-no-photo-card {
  margin-top: 2rem;
}

img.headshot {
  border: 5px solid var(--pink-10);
  border-radius: var(--radius-blob-5);
  height: auto;
  /* fallback */
}

.person-card h3,
.person-no-photo-card h3 {
  display: flex;
  color: var(--grey-50);
  font-family: var(--font-primary);
  font-size: var(--size-400);
  justify-content: space-between;
  align-items: center;
  position: relative;
  margin-bottom: 0.5em;
}

.person-no-photo-card h3 {
  margin-top: 1.5em;
}

.person-card h3::after {
  content: "";
  background: var(--crimson);
  height: 2px;
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
}

.person-card svg {
  margin-left: 0.5rem;
}

a {
  color: var(--red-40);
}

.dark-bg a:not(.button) {
  color: var(--red-30);
}

a:hover {
  color: var(--red-30);
}

.dark-bg a:not(.button):hover {
  color: var(--red-20);
}

.vertical-center {
  display: flex;
  align-items: center;
}

button,
.button {
  background: var(--pink-10);
  border: none;
  border-radius: var(--border-radius);
  color: var(--pink-1);
  cursor: pointer;
  display: inline-block;
  font-family: var(--font-accent);
  padding: 8px 20px;
  text-decoration: none;

}

.button svg {
  margin-right: 8px;
}

button:hover,
.button:hover {
  background-color: var(--pink-11);
  color: var(--pink-2);
}

.button-small {
  font-size: var(--size-300);
  padding: 4px 8px;
}

.button-grey {
  background-color: var(--grey-45);
}

.button-grey:hover {
  background-color: var(--grey-30);
}

.action-buttons {
  display: flex;
  gap: 16px;
  margin-bottom: 16px;
}

.button-link {
  background-color: var(--white);
  color: var(--red-default);
  font-family: var(--font-primary);
  font-size: var(--size-300);
  font-weight: 700;
}

.button-link:hover {
  background-color: var(--white);
  color: var(--red-30);
}

time {
  font-weight: bold;
  font-size: var(--size-300);
}

.talk-card {
  margin: 5rem 0 0 max(5vw, 2rem);
  position: relative;
}

.talk-card .headshot {
  border-color: var(--red-default);
  position: absolute;
  right: 0;
  bottom: -2px;
  width: 75px;
  z-index: 2;
}

.talk-card h4 {
  padding-bottom: 0.5rem;
  position: relative;
  margin-bottom: 1rem;
}

.talk-card h4 span {
  display: inline-block;
  max-width: calc(100% - 80px);
}

.talk-card h4::after {
  content: "";
  background: var(--crimson);
  height: 5px;
  position: absolute;
  bottom: -2px;
  left: 0;
  width: calc(100% - 35px);
}

input,
label {
  display: block;
}

label {
  font-weight: 700;
}

/* Nav */
nav {
  position: relative;
}

.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, var(--space-m));
  justify-content: flex-end;
  align-items: center;
}

nav {
  margin: 0;
  padding-block: var(--space, 1em);
}

nav li a {
  color: var(--pink-1);
  font-family: var(--font-accent);
  /* letter-spacing: 1px; */
  text-decoration: none;
}

nav li a:hover {
  color: var(--pink-2);
}

/* header::after {
  content: "";
  background: var(--crimson);
  height: 4px;
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
} */

/* Footer */
footer {
  position: relative;
}

footer section {
  display: flex;
  flex-direction: column;
  align-items: center;
}

footer ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

footer li {
  align-items: center;
  display: grid;
  gap: 16px;
  grid-template-columns: 30px 1fr;
  margin: 12px 0;
}

footer svg {
  color: var(--teal-default);
}

.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-placement, auto-fill),
      minmax(var(--grid-min-item-size, 16rem), 1fr));
  gap: var(--gutter, var(--space-s-l));
}

.grid[data-rows='masonry'] {
  grid-template-rows: masonry;
  align-items: start;
}

.grid[data-layout='50-50'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 26rem);
}

.card {
  background: var(--pink-10);
  color: var(--pink-1);
  padding: var(--space-m-l);
  border-radius: var(--border-radius);
  max-width: unset;
  box-shadow: var(--shadow-3);
}

.card ::selection {
  color: var(--pink-10);
  background: var(--pink-1);
}

.prose {
  --flow-space: var(--space-l-xl);
  --wrapper-max-width: 55rem;
}

.prose :is(h2, h3, h4)+* {
  --flow-space: var(--space-s-m);
}

.prose blockquote {
  border-inline-start: 10px solid var(--pink-10);
  padding: var(--space-m-l);
  font-family: var(--font-serif);
  font-size: var(--size-step-2);
}

.prose blockquote>*+* {
  margin-top: var(--space-m-l);
}

.prose blockquote :last-child {
  font-family: var(--font-base);
  font-style: normal;
  font-size: var(--size-step-1);
}

.hero {
  display: grid;
  place-content: center;
}

.curve {
  display: block;
  height: 3.5em;
  width: 100%;
  fill: var(--pink-10, var(--pink-10));
}